name: crear ejecutables

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    publish:
      permissions:
        contents: write

    runs-on: ${{matrix.os}}

    strategy:
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.12'
      
      - name: Install Poetry
        uses: Gr1N/setup-poetry@v9

      - name: Install dependencies
        run: poetry install

      - name: Istall pyInstaller
        run: pip install pyinstaller
      
      - name: Install Toml
        run: pip install toml

      - name: Build
        run: pyinstaller --onefile --windowed --name "autoclicker-${{matrix.os}}" autoclicker/__init__.py
      
      - name: Extract version
        run: |
          echo "VERSION=$(python ./version.py)" >>$GITHUB_ENV

      - name: Extract Changes
        run: |
          echo "CHANGES=$(cat ./changes.txt)" >>$GITHUB_ENV
          
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.VERSION }}
          release_name: Release ${{ env.VERSION }}
          body: ${{ env.CHANGES }}
          draft: true
          prerelease: false
      
      - name: Get release file name for others
        if: matrix.os != 'windows-latest'
        run: echo "RELEASE_FILE_NAME=autoclicker-${{matrix.os}}" >>$GITHUB_ENV

      - name: Get release file name for windows
        if: matrix.os == 'windows-latest'
        run: echo "RELEASE_FILE_NAME=autoclicker-${{matrix.os}}.exe" >>$GITHUB_ENV

      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} 
          asset_path: ./dist/${{ env.RELEASE_FILE_NAME }}
          asset_name: ${{ env.RELEASE_FILE_NAME }}
          asset_content_type: application/octet-stream
